// conda.enabled = true

params {
    // Config options
    RawData_Folder ="${params.root_folder}/nextflow/STRING_Data_11.5"
    PPI_Coevolution = "${params.root_folder}/nextflow/PPI_Coevolution"
    
    // /mnt/mnemo5/tao/anaconda3/envs/
    // pydca_conda="py37_pydca"
    // sequence_tools_conda="sequence_tools"  // seems when we dont specify path, the nextflow will create enviroment from scratch
    pydca_conda="${params.conda_envs_path}/py37_pydca"
    sequence_tools_conda="${params.conda_envs_path}/sequence_tools"

}


process {
        // executor = 'local'  //this is by default so dont need to specify it here 

        withLabel: simple_process {
            cpus = "${params.small_cpu_nums}"//4
            memory = "${params.small_memory}" //32.GB
            conda="${params.sequence_tools_conda}" // here will be ignore is conda.enabled = false in other profile configuration 
            container = { workflow.containerEngine == 'singularity' && params.container_path == '' ?
                "library://tfang/base/sequence_tools:latest" :
                "${params.container_path}/sequence_tools.sif" }
        // container = "${params.container_path}/sequence_tools.sif"   // here will be ignore is singularity.enabled    = false
    }
    
    
    withLabel: simple_py_process {
        cpus = "${params.small_cpu_nums}" //8
        memory = "${params.small_memory}" //128.GB
        conda="${params.sequence_tools_conda}"
        container = { workflow.containerEngine == 'singularity' && params.container_path == '' ?
            "library://tfang/base/sequence_tools:latest" :
            "${params.container_path}/sequence_tools.sif" }
        
    }
    
    
    
    withLabel: many_cpu_process {
        cpus = "${params.large_cpu_nums}"//60
        memory = "${params.middle_memory}" //100.GB
        conda="${params.sequence_tools_conda}"
        container = { workflow.containerEngine == 'singularity' && params.container_path == '' ?
            "library://tfang/base/sequence_tools:latest" :
            "${params.container_path}/sequence_tools.sif" }
        
    }
    
    withLabel: large_memory_process {
        cpus = "${params.middle_cpu_nums}" //30
        memory = "${params.large_memory}" //400.GB
        conda="${params.sequence_tools_conda}"
        container = { workflow.containerEngine == 'singularity' && params.container_path == '' ?
            "library://tfang/base/sequence_tools:latest" :
            "${params.container_path}/sequence_tools.sif" }
    }
    
    withLabel: manyCPU_largeMemory_process {
        cpus = "${params.large_cpu_nums}" //100
        memory = "${params.large_memory}" //400.GB
        conda="${params.sequence_tools_conda}"
        container = { workflow.containerEngine == 'singularity' && params.container_path == '' ?
            "library://tfang/base/sequence_tools:latest" :
            "${params.container_path}/sequence_tools.sif" }
    }
    
    withLabel: coevolutionComputation_mfDCA_parallel_process {
        cpus = 4 //100
        memory = "${param.singleDCA_memory}" 
        conda="${params.pydca_conda}"
        container = { workflow.containerEngine == 'singularity' && params.container_path == '' ?
            "library://tfang/base/py37_pydca:latest" :
            "${params.container_path}/py37_pydca.sif" }
        // container = "${params.container_path}/py37_pydca.sif"
        // conda="/mnt/mnemo5/tao/anaconda3/envs/py37_pydca"
    }  
    
    // withLabel: coevolutionComputation_mfDCA_process {
    //     cpus = "${params.large_cpu_nums}" //100
    //     memory = "${params.large_memory}" //400.GB
    //     conda="${params.pydca_conda}"
    //     container = { workflow.containerEngine == 'singularity' && params.container_path == '' ?
    //         "library://tfang/base/py37_pydca:latest" :
    //         "${params.container_path}/py37_pydca.sif" }
    //     // container = "${params.container_path}/py37_pydca.sif"
    //     // conda="/mnt/mnemo5/tao/anaconda3/envs/py37_pydca"
    // }  
    
    



}



