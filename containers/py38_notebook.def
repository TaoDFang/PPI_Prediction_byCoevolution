BootStrap: library
From: ubuntu:20.04

%files
    /mnt/mnemo5/tao/PPI_Prediction_byCoevolution/containers/conda_envs/py38_notebook_environment.yml  /home/conda_envs/py38_notebook_environment.yml

%post
    apt-get update && apt-get -y upgrade
    apt-get -y install \
    build-essential \
    wget \
    less 

    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh 
    bash  Miniconda3-latest-Linux-x86_64.sh -b -u -p /home/miniconda3 
    
    . /home/miniconda3/etc/profile.d/conda.sh
    

    # this is necessary for nextlfow, so the need envs is activated without extra operation
    echo ". /home/miniconda3/etc/profile.d/conda.sh" >> $SINGULARITY_ENVIRONMENT
    echo "conda activate py38_notebook" >> $SINGULARITY_ENVIRONMENT
    
    
    /home/miniconda3/bin/conda env  create  -f /home/conda_envs/py38_notebook_environment.yml
    
    conda activate py38_notebook  
    
           
    conda info --envs
    
    
    

%environment
    export LC_ALL=C
    export PATH=$PATH:/home/miniconda3/bin/conda # check this:   /root/.bashrc, this is nomal linux exprot grammer "export PATH="/home/miniconda3/bin/conda:$PATH""
    
    

%runscript
    echo "this section defines actions for the container to take when it is executed. (These commands will therefore not be run at build time.)"
    


# cd ~/PPI_Prediction_byCoevolution/containers
# or  singularity build --fakeroot ~/singularity_containers/py38_notebook.sif ~/PPI_Prediction_byCoevolution/containers/py38_notebook.def
# or singularity build --remote ~/singularity_containers/remoteBuild/py38_notebook.sif ~/PPI_Prediction_byCoevolution/containers/py38_notebook.def





# conda create -n py38_notebook python=3.8
# conda activate py38_notebook
# conda install -c conda-forge py3dmol 
# conda install -c anaconda scikit-learn=1.0.2  #here keep the same version to make sure the same results
# conda install -c conda-forge biopython 
# conda install -c anaconda seaborn #=0.12.2 #this install matplotlib-base 
# conda install -c anaconda networkx # this is needed
# python -m ipykernel install --user --name py38_notebook --display-name "py38_notebook"
